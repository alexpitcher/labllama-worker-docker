version: "3.8"  # Use a recent Compose file format for healthcheck support  [oai_citation:8‡Docker Documentation](https://docs.docker.com/compose/gettingstarted/?utm_source=chatgpt.com) [oai_citation:9‡Medium](https://chadsmith-software.medium.com/docker-service-inter-communication-setting-up-redis-and-a-web-app-with-docker-compose-b1cf353eb7a9?utm_source=chatgpt.com)

services:
  redis:
    image: redis:latest
    container_name: redis_service
    ports:
      - "6379:6379"  # Expose Redis for local testing  [oai_citation:10‡Medium](https://chadsmith-software.medium.com/docker-service-inter-communication-setting-up-redis-and-a-web-app-with-docker-compose-b1cf353eb7a9?utm_source=chatgpt.com) [oai_citation:11‡Medium](https://medium.com/%40vmbdeveloper/python-using-redis-with-docker-0400a5b2a735?utm_source=chatgpt.com)
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data  # Persist Redis data across restarts  [oai_citation:12‡DEV Community](https://dev.to/bravinsimiyu/how-to-containerize-a-redis-flask-application-using-docker-compose-1fpi?utm_source=chatgpt.com) [oai_citation:13‡Medium](https://medium.com/%40vmbdeveloper/python-using-redis-with-docker-0400a5b2a735?utm_source=chatgpt.com)

  worker:
    build:
      context: .           # Assumes Dockerfile is in project root  [oai_citation:14‡GitHub](https://github.com/raman-kishore/docker-python-redis?utm_source=chatgpt.com) [oai_citation:15‡Stack Overflow](https://stackoverflow.com/questions/70621547/django-docker-compose-celery-redis-how-to-use-redis-deployed-in-my-own-re?utm_source=chatgpt.com)
      dockerfile: Dockerfile
    image: my-worker-app:latest
    container_name: worker_service
    depends_on:
      redis:
        condition: service_healthy  # Wait until Redis healthcheck passes  [oai_citation:16‡Medium](https://chadsmith-software.medium.com/docker-service-inter-communication-setting-up-redis-and-a-web-app-with-docker-compose-b1cf353eb7a9?utm_source=chatgpt.com) [oai_citation:17‡React and Django Tutorial](https://saasitive.com/tutorial/django-celery-redis-postgres-docker-compose/?utm_source=chatgpt.com)
    environment:
      - HOST_ID=${HOST_ID:-local-worker}           # Unique identifier for this host  [oai_citation:18‡blog.abbasmj.com](https://blog.abbasmj.com/implementing-redis-task-queues-and-deploying-on-docker-compose?utm_source=chatgpt.com) [oai_citation:19‡Stack Overflow](https://stackoverflow.com/questions/64682749/running-redis-rq-worker-on-docker?utm_source=chatgpt.com)
      - REDIS_HOST=redis                           # Refers to the ‘redis’ service name  [oai_citation:20‡Medium](https://chadsmith-software.medium.com/docker-service-inter-communication-setting-up-redis-and-a-web-app-with-docker-compose-b1cf353eb7a9?utm_source=chatgpt.com) [oai_citation:21‡Medium](https://medium.com/%40vmbdeveloper/python-using-redis-with-docker-0400a5b2a735?utm_source=chatgpt.com)
      - REDIS_PORT=6379
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL} # Optional: set in your shell if you want alerts  [oai_citation:22‡GitHub](https://github.com/raman-kishore/docker-python-redis?utm_source=chatgpt.com) [oai_citation:23‡React and Django Tutorial](https://saasitive.com/tutorial/django-celery-redis-postgres-docker-compose/?utm_source=chatgpt.com)
      - API_KEY=${API_KEY:-test-api-key}           # Dummy API key for local testing  [oai_citation:24‡blog.abbasmj.com](https://blog.abbasmj.com/implementing-redis-task-queues-and-deploying-on-docker-compose?utm_source=chatgpt.com) [oai_citation:25‡Stack Overflow](https://stackoverflow.com/questions/64682749/running-redis-rq-worker-on-docker?utm_source=chatgpt.com)
      - METRICS_URL=${METRICS_URL:-http://localhost:5000/api/metrics/batch}  # Mock server URL  [oai_citation:26‡blog.abbasmj.com](https://blog.abbasmj.com/implementing-redis-task-queues-and-deploying-on-docker-compose?utm_source=chatgpt.com) [oai_citation:27‡GitHub](https://github.com/raman-kishore/docker-python-redis?utm_source=chatgpt.com)
      - LOG_LEVEL=INFO                             # Ensure INFO-level logs are printed  [oai_citation:28‡Medium](https://medium.com/%40vmbdeveloper/python-using-redis-with-docker-0400a5b2a735?utm_source=chatgpt.com) [oai_citation:29‡YouTube](https://www.youtube.com/watch?v=bmU9K3BttVc&utm_source=chatgpt.com)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Read-only Docker socket mount  [oai_citation:30‡DEV Community](https://dev.to/bravinsimiyu/how-to-containerize-a-redis-flask-application-using-docker-compose-1fpi?utm_source=chatgpt.com) [oai_citation:31‡GitHub](https://github.com/raman-kishore/docker-python-redis?utm_source=chatgpt.com)
      - ./src:/app/src                                # Mount source code for “editable” testing  [oai_citation:32‡Medium](https://medium.com/%40vmbdeveloper/python-using-redis-with-docker-0400a5b2a735?utm_source=chatgpt.com) [oai_citation:33‡React and Django Tutorial](https://saasitive.com/tutorial/django-celery-redis-postgres-docker-compose/?utm_source=chatgpt.com)
    ports:
      - "8000:8000"  # Expose metrics endpoint for Prometheus  [oai_citation:34‡Docker Documentation](https://docs.docker.com/compose/gettingstarted/?utm_source=chatgpt.com) [oai_citation:35‡YouTube](https://www.youtube.com/watch?v=bmU9K3BttVc&utm_source=chatgpt.com)
    command: ["python3", "-m", "worker.main"]

volumes:
  redis_data: {}     # Named volume for Redis persistence  [oai_citation:36‡DEV Community](https://dev.to/bravinsimiyu/how-to-containerize-a-redis-flask-application-using-docker-compose-1fpi?utm_source=chatgpt.com) [oai_citation:37‡Medium](https://medium.com/%40vmbdeveloper/python-using-redis-with-docker-0400a5b2a735?utm_source=chatgpt.com)